---
import { Icon } from 'astro-icon/components'

import Logo from '~/components/Logo.astro'
import ToggleMenu from '~/components/common/ToggleMenu.astro'

import { getHomePermalink } from '~/utils/permalinks'
import { trimSlash } from '~/utils/permalinks'

interface Link {
  text?: string
  href?: string
  ariaLabel?: string
  icon?: string
}

interface MenuLink extends Link {
  links?: Array<MenuLink>
}

export interface Props {
  id?: string
  links?: Array<MenuLink>
}

const { id = 'header', links = [] } = Astro.props

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`
---

<header
  class:list={['sticky top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out']}
  {...{ 'data-aw-sticky-header': true }}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative text-default py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between">
    <div class="flex justify-between mr-auto">
      <a
        class="flex items-center"
        href={getHomePermalink() === currentPath ? 'javascript:void(0)' : getHomePermalink()}
      >
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:justify-end md:self-center md:gap-5 w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium font-mono"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button class="hover:text-muted px-4 py-3 flex items-center">
                    {text} <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class="first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-muted py-2 px-5 block whitespace-no-wrap"
                          target={href?.startsWith('/') ? '_self' : '_blank'}
                          href={href2 === currentPath ? 'javascript:void(0)' : href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class={'hover:text-muted p-3 flex items-center text-sm font-medium'}
                  target={href?.startsWith('/') ? '_self' : '_blank'}
                  href={href === currentPath ? 'javascript:void(0)' : href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>
